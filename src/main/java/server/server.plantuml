@startuml

title __SERVER's Class Diagram__\n

  namespace server {
    class server.ChatClientHandler {
        ~ inputStream : InputStream
        ~ outputStream : OutputStream
        ~ reader : BufferedReader
        - chatClientInHandler : Thread
        - chatClientOutHandler : Thread
        - clientName : String
        - clientPassword : String
        - clientSocket : Socket
        - hasException : boolean
        - loginStatus : boolean
        + ChatClientHandler()
        + addToNewGroupNotify()
        + getClientName()
        + handleLogOut()
        + handleLogin()
        + handleMessage()
        + handleSocket()
        + hasException()
        + isConnected()
        + isLogin()
        + offlineNotify()
        + onlineNotify()
        + pullMessage()
        + pushMessage()
        + readException()
        + run()
        - handleNewGroup()
    }
  }
  

  namespace server {
    class server.ChatClientHandler.ChatQueue {
        - messageQueue : Queue<Message>
        + add()
        + hasNext()
        + next()
    }
  }
  

  namespace server {
    class server.ChatClientHandler.Output {
        + clear()
        + getOutMessage()
        + setOutMessage()
    }
  }
  

  namespace server {
    class server.ChatClientInHandler {
        ~ baos : ByteArrayOutputStream
        ~ fileStream : InputStream
        ~ msgStream : InputStream
        - inputStream : InputStream
        - reader : BufferedReader
        + ChatClientInHandler()
        + getMessage()
        + run()
    }
  }
  

  namespace server {
    class server.ChatClientOutHandler {
        - outputStream : OutputStream
        + ChatClientOutHandler()
        + run()
    }
  }
  

  namespace server {
    class server.ChatServer {
        - clientList : ArrayList<ChatClientHandler>
        - groupList : ArrayList<GroupChat>
        - serverSocket : ServerSocket
        + ChatServer()
        + addClient()
        + addGroup()
        + getClientList()
        + getGroupList()
        + start()
    }
  }
  

  namespace server {
    class server.ChatServer.ChatQueue {
        - chatQueue : Queue<Message>
        + add()
        + getNext()
        + hasNext()
    }
  }
  

  namespace server {
    class server.DirectMessage {
        + DirectMessage()
        + direct()
        + findClient()
        + findGroup()
        + run()
    }
  }
  

  namespace server {
    class server.GroupChat {
        - id : String
        - memberList : ArrayList<String>
        - name : String
        + GroupChat()
        + addMember()
        + getMemberList()
        + getName()
        + setName()
    }
  }
  

  namespace server {
    class server.Server {
        {static} + main()
    }
  }
  

  server.ChatClientHandler o-- server.ChatClientHandler.Output : chatOut
  server.ChatClientHandler o-- server.ChatClientHandler.ChatQueue : chatQueue
  server.ChatClientHandler o-- server.ChatServer : chatServer
  server.ChatClientHandler +-down- server.ChatClientHandler.ChatQueue
  server.ChatClientHandler +-down- server.ChatClientHandler.Output
  server.ChatClientHandler.Output o-- protocol.Message : outMessage
  server.ChatClientInHandler .up.|> java.lang.Runnable
  server.ChatClientInHandler o-- server.ChatClientHandler : chatClientHandler
  server.ChatClientOutHandler .up.|> java.lang.Runnable
  server.ChatClientOutHandler o-- server.ChatClientHandler : client
  server.ChatClientOutHandler o-- protocol.Message : message
  server.ChatServer o-- server.ChatServer.ChatQueue : chatQueue
  server.ChatServer +-down- server.ChatServer.ChatQueue
  server.DirectMessage .up.|> java.lang.Runnable
  server.DirectMessage o-- server.ChatServer : chatServer
  server.DirectMessage o-- protocol.Message : message


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
